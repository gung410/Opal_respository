using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using cxOrganization.Client;
using cxOrganization.Client.UserGroups;
using cxOrganization.Domain.Entities;
using cxOrganization.Domain.Enums;
using cxPlatform.Client.ConexusBase;
using cxPlatform.Core;

namespace cxOrganization.Domain.Repositories
{
    public interface IUGMemberRepository : IRepository<UGMemberEntity>
    {
        List<UGMemberEntity> GetUGMembers(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugmemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatuses = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            bool includeUser = false,
            bool includeUserGroup = false,
            bool nonuserMemberOnly = false,
            string userSearchKey = null,
            bool includeUserGroupUser = false,
            bool disableTracker = false);

        Task<List<UGMemberEntity>> GetUGMembersAsync(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugmemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatuses = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            bool includeUser = false,
            bool includeUserGroup = false,
            bool nonuserMemberOnly = false,
            string userSearchKey = null,
            bool includeUserGroupUser = false,
            bool disableTracker = false);

        Dictionary<int, int> CountMemberGroupByUserGroup(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugMemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatus = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            DateTime? createdBefore = null,
            DateTime? createdAfter = null,
            string userSearchKey = null);
       Task<Dictionary<int, int>> CountMemberGroupByUserGroupAsync(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugMemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatus = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            DateTime? createdBefore = null,
            DateTime? createdAfter = null,
            string userSearchKey = null);

        CustomPaginatedList<UGMemberEntity> GetPaginatedUGMembers(int ownerId = 0,
            List<int> customerIds = null,
            List<long> ugMemberIds = null,
            List<string> ugMemberExtIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatuses = null,
            List<string> userGroupRefererCxTokens = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<string> userGroupExtIds = null,
            List<EntityStatusEnum> ugMemberStatus = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            Dictionary<GrouptypeEnum, List<int>> userGroupIdsGroupsByType = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            DateTime? createdBefore = null,
            DateTime? createdAfter = null,
            DateTime? lastUpdatedBefore = null,
            DateTime? lastUpdatedAfter = null,
            bool includeUser = false,
            bool includeUserGroup = false,
            int pageIndex = 0,
            int pageSize = 0,
            string orderBy = "",
            bool getTotalItemCount = false,
            bool distinct = false,
            string userSearchKey = null);

        Task<int> CountUGMembersAsync(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugmemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatuses = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            bool nonuserMemberOnly = false,
            string userSearchKey = null);

          int CountUGMembers(
            int ownerId = 0,
            List<int> customerIds = null,
            List<ArchetypeEnum> userGroupArchetypeIds = null,
            List<string> userGroupExtIds = null,
            List<string> userGroupReferrerTokens = null,
            List<string> userGroupReferrerResources = null,
            List<ArchetypeEnum> userGroupReferrerArchetypes = null,
            List<GrouptypeEnum> userGroupTypeIds = null,
            List<EntityStatusEnum> userGroupStatus = null,
            List<string> userGroupReferrerCxTokens = null,
            List<long> ugmemberIds = null,
            List<int> userIds = null,
            List<int> userGroupIds = null,
            List<EntityStatusEnum> ugMemberStatuses = null,
            List<string> userExtIds = null,
            List<ArchetypeEnum> userArchetypes = null,
            List<string> referrerTokens = null,
            List<string> referrerResources = null,
            List<ArchetypeEnum> referrerArchetypes = null,
            List<AgeRange> memberAgeRanges = null,
            List<Gender> memberGenders = null,
            DateTime? validFromBefore = null,
            DateTime? validFromAfter = null,
            DateTime? validToBefore = null,
            DateTime? validToAfter = null,
            bool nonuserMemberOnly = false,
            string userSearchKey = null);
    }


}
