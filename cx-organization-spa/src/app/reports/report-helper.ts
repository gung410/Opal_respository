import { Injectable } from '@angular/core';
import { User } from 'app-models/auth.model';
import { DateTimeUtil } from 'app-utilities/date-time-utils';
import * as moment from 'moment';
import { DateRange } from './models/date-range';
import { InfoRecord } from './models/info-record';
import { ReportType } from './models/report-type';

@Injectable()
export class ReportHelpers {
  static buildStartTimeAndEndTime(surveyData: any): DateRange {
    return {
      startTime: DateTimeUtil.surveyToDateLocalTimeISO(surveyData.fromDate),
      endTime: DateTimeUtil.surveyToEndDateLocalTimeISO(surveyData.toDate)
    };
  }

  static buildStandardReportInfo(
    currentUser: User,
    dateRange: DateRange
  ): InfoRecord[] {
    return [
      {
        caption: 'Start Date (From)',
        value: dateRange.startTime
      },
      {
        caption: 'End Date (To)',
        value: dateRange.endTime
      },
      {
        caption: 'Generated at',
        value: new Date().toISOString()
      },
      {
        caption: 'Generated by',
        value: currentUser.fullName
      }
    ];
  }

  static isLongPeriod(reportType: ReportType, dateRange: DateRange): boolean {
    const startTime = new Date(dateRange.startTime);
    const endTime = new Date(dateRange.endTime);

    // TODO: Move this into configuration.
    let shortPeriodInDays = 0;
    switch (reportType) {
      case ReportType.UserAccountDetails:
        shortPeriodInDays = 14;
        break;
      case ReportType.AccountStatistics:
      case ReportType.PrivilegedAccounts:
        shortPeriodInDays = 60;
        break;
      default:
        break;
    }

    const endTimeInRange = moment(startTime).add('days', shortPeriodInDays);

    return moment(endTime).isSameOrAfter(endTimeInRange);
  }
}
