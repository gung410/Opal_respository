---
format_version: 3
environments:
  systemtest:
    pipelines:
      - cx-cloudfront-api-build
      - cx-cloudfront-api-systemtest
  uat:
    pipelines:
      - cx-cloudfront-api-uat
  pre-production:
    pipelines:
      - cx-cloudfront-api-pre-production
  production:
    pipelines:
      - cx-cloudfront-api-production
pipelines:
  cx-cloudfront-api-build:
    group: cx-cloudfront-api
    label_template: "release-2.0.${COUNT}"
    lock_behavior: none
    parameters: # list of parameters that can be configured for a pipeline
      PROJECT_DIR: src/microservices/cloudfront-microservice/Api/
      SONAR_PROJECTKEY: cx-cloudfront-api-release
      SONAR_SOLUTION_FILE: PlatformWorkspace.sln
    environment_variables:
      DOCKER_IMAGE_TAG:
      DOCKER_IMAGE_REPO: cx-cloudfront-api
    template: osd-linux-docker-build-sonar-dotnetcore
    materials:
      bitbuket-git:
        branch: releases/2.0
        git: "https://bitbucket.org/cxdev/cx-opal20-platform.git"
        username: samnguyenn
        encrypted_password: AES:Gl+5mhjKWgWeGW5TCVLRlA==:xT2hvR8chS49PNkvuN2xhw==
        whitelist:
          - src/microservices/cloudfront-microservice/Api/**/*.*
  cx-cloudfront-api-systemtest:
    group: cx-cloudfront-api
    label_template: "${upstream}"
    materials:
      upstream:
        pipeline: cx-cloudfront-api-build
        stage: docker-push
    parameters: # list of parameters that can be configured for a pipeline
      UP_STREAME_PIPELINE_NAME: cx-cloudfront-api-build
      UP_STREAME_PIPELINE_STAGE: docker-push
      UP_STREAME_PIPELINE_JOB: docker-push
    environment_variables:
      DOCKER_IMAGE_TAG:
      DOCKER_IMAGE_REPO: cx-cloudfront-api
      PUBLIC_DNS: ",content.systemtest.opal2.conexus.net"
    template: ansible-deploy-fetch-upstream
  cx-cloudfront-api-uat:
    group: cx-cloudfront-api
    label_template: "${upstream}"
    materials:
      upstream:
        pipeline: cx-cloudfront-api-systemtest
        stage: deploy-stage
    parameters: # list of parameters that can be configured for a pipeline
      UP_STREAME_PIPELINE_NAME: cx-cloudfront-api-systemtest
      UP_STREAME_PIPELINE_STAGE: deploy-stage
      UP_STREAME_PIPELINE_JOB: deploy
    environment_variables:
      DOCKER_IMAGE_TAG:
      DOCKER_IMAGE_REPO: cx-cloudfront-api
      PUBLIC_DNS: ",content.uat.opal2.conexus.net"
    template: ansible-deploy-fetch-upstream
  cx-cloudfront-api-pre-production:
    group: cx-cloudfront-api
    label_template: "${upstream}"
    materials:
      upstream:
        pipeline: cx-cloudfront-api-uat
        stage: deploy-stage
    parameters: # list of parameters that can be configured for a pipeline
      UP_STREAME_PIPELINE_NAME: cx-cloudfront-api-uat
      UP_STREAME_PIPELINE_STAGE: deploy-stage
      UP_STREAME_PIPELINE_JOB: deploy
    environment_variables:
      DOCKER_IMAGE_TAG:
      DOCKER_IMAGE_REPO: cx-cloudfront-api
      PUBLIC_DNS: ",content.pre-prod.opal2.conexus.net"
    template: ansible-deploy-fetch-upstream
  cx-cloudfront-api-production:
    group: cx-cloudfront-api
    label_template: "${upstream}"
    materials:
      upstream:
        pipeline: cx-cloudfront-api-uat
        stage: deploy-stage
    parameters: # list of parameters that can be configured for a pipeline
      UP_STREAME_PIPELINE_NAME: cx-cloudfront-api-uat
      UP_STREAME_PIPELINE_STAGE: deploy-stage
      UP_STREAME_PIPELINE_JOB: deploy
    environment_variables:
      DOCKER_IMAGE_TAG:
      DOCKER_IMAGE_REPO: cx-cloudfront-api
      PUBLIC_DNS: ",content.prod.opal2.conexus.net"
    template: ansible-deploy-fetch-upstream
