// <auto-generated />
using System;
using Microservice.Course.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservice.Course.Migrations
{
    [DbContext(typeof(CourseDbContext))]
    [Migration("20201012205603_ImproveSpt2.2_UseFullTextSearchForMultiValuesColumn")]
    partial class ImproveSpt22_UseFullTextSearchForMultiValuesColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Conexus.Opal.AccessControl.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Conexus.Opal.AccessControl.Entities.DepartmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentTypeId")
                        .HasColumnName("DepartmentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ExtId")
                        .HasColumnName("ExtID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentTypeId");

                    b.HasIndex("ExtId");

                    b.ToTable("DepartmentTypes");
                });

            modelBuilder.Entity("Conexus.Opal.AccessControl.Entities.DepartmentTypeDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentTypeId")
                        .HasColumnName("DepartmentTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentTypeId");

                    b.ToTable("DepartmentTypeDepartments");
                });

            modelBuilder.Entity("Conexus.Opal.AccessControl.Entities.HierarchyDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("HierarchyDepartmentId")
                        .HasColumnName("HDID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnName("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("HierarchyDepartmentId");

                    b.HasIndex("ParentId");

                    b.HasIndex("Path");

                    b.ToTable("HierarchyDepartments");
                });

            modelBuilder.Entity("Conexus.Opal.OutboxPattern.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("FailReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PreparedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReadyToDelete")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("RoutingKey")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("SendTimes")
                        .HasColumnType("int");

                    b.Property<string>("SourceIp")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Status")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(19)")
                        .HasMaxLength(19)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Status", "CreatedDate");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EndDate");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("StartDate");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("Type", "IsDeleted", "CreatedDate");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.AttendanceTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CodeScannedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCodeScanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReasonForAbsence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegistrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("RegistrationId", "IsDeleted", "CreatedDate");

                    b.HasIndex("SessionId", "IsDeleted", "CreatedDate");

                    b.HasIndex("Status", "IsDeleted", "CreatedDate");

                    b.HasIndex("Userid", "IsDeleted", "CreatedDate");

                    b.ToTable("AttendanceTracking");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ClassRun", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApplicationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApplicationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovalContentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellationStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClassRunCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ClassRunVenueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassTitle")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("CoFacilitatorIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasDefaultValue("Draft");

                    b.Property<bool>("CourseCriteriaActivated")
                        .HasColumnType("bit");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilitatorIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxClassSize")
                        .HasColumnType("int");

                    b.Property<int>("MinClassSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanningEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanningStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishedContentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RescheduleEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RescheduleStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RescheduleStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("Unpublished");

                    b.Property<DateTime?>("SubmittedContentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassRunCode");

                    b.HasIndex("CourseId");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("EndDateTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("StartDateTime");

                    b.HasIndex("CancellationStatus", "IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunCode", "IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunVenueId", "IsDeleted", "CreatedDate");

                    b.HasIndex("ContentStatus", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseCriteriaActivated", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("RescheduleStatus", "IsDeleted", "CreatedDate");

                    b.HasIndex("Status", "IsDeleted", "CreatedDate");

                    b.ToTable("ClassRun");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ClassRunInternalValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("FacilitatorIds");

                    b.Property<Guid>("Value")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassRunId");

                    b.HasIndex("Type");

                    b.HasIndex("Value");

                    b.ToTable("ClassRunInternalValue");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Action", "CreatedDate");

                    b.HasIndex("ObjectId", "CreatedDate");

                    b.HasIndex("UserId", "CreatedDate");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CommentTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("UserId", "CreatedDate");

                    b.ToTable("CommentTrack");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CourseCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoCurricularActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCriteriaServiceSchemes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DevRoles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreRequisiteCourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGradeBanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingCourseOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingLevels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tracks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("AccountType", "IsDeleted");

                    b.ToTable("CourseCriteria");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcknowledgementAndCredit")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(true);

                    b.Property<bool>("AllowNonCommerInMOEReuseWithModification")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowNonCommerInMoeReuseWithoutModification")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowNonCommerReuseWithModification")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowNonCommerReuseWithoutModification")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPersonalDownload")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AlternativeApprovingOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicableBranchIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicableClusterIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicableDivisionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicableSchoolIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicableZoneIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalContentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CocurricularActivityIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaborativeContentCreatorIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaborativeContentCreatorIdsFullTextSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasDefaultValue("Draft");

                    b.Property<string>("CopyrightOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCoFacilitatorIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCoFacilitatorIdsFullTextSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CourseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseFacilitatorIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseFacilitatorIdsFullTextSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CourseFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CourseLevel")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("CourseObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseOutlineStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CoursePlanningCycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasDefaultValue("New");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DevelopmentalRoleIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationHours")
                        .HasColumnType("int");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("ECertificatePrerequisite")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("ECertificateTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EasSubstantiveGradeBandingIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ExternalId")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<Guid?>("FirstAdministratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullTextSearch")
                        .HasColumnType("nvarchar(2100)")
                        .HasMaxLength(2100);

                    b.Property<string>("FullTextSearchKey")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrated")
                        .HasColumnType("bit");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningDimensionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningFrameworkIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningMode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LearningSubAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOEOfficerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MOEOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MOEOfficerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxParticipantPerClass")
                        .HasColumnType("int");

                    b.Property<int>("MaxReLearningTimes")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumPlacesPerSchool")
                        .HasColumnType("int");

                    b.Property<int?>("MinParticipantPerClass")
                        .HasColumnType("int");

                    b.Property<string>("NatureOfCourse")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NieAcademicGroups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NotionalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumOfBeginningTeacher")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfHoursPerClass")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfHoursPerSession")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfMiddleManagement")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfPlannedClass")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfSchoolLeader")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfSeniorOrLeadTeacher")
                        .HasColumnType("int");

                    b.Property<int?>("NumOfSessionPerClass")
                        .HasColumnType("int");

                    b.Property<string>("OtherTrainingAgencyReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerBranchIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerDivisionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDActivityType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PDAreaThemeCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PDAreaThemeId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PartnerOrganisationIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdActivityPeriods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfWork")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("ApplicableForEveryone");

                    b.Property<DateTime?>("PlanningArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanningPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PostCourseEvaluationFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreCourseEvaluationFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrerequisiteCourseIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrimaryApprovingOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishedContentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationMethod")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(true);

                    b.Property<Guid?>("SecondAdministratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceSchemeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(true);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasDefaultValue("Draft");

                    b.Property<string>("SubjectAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedContentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeacherOutcomeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingCourseStudyIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingLevels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingSubjectIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsOfUse")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(true);

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("TotalHoursAttendWithinYear")
                        .HasColumnType("int");

                    b.Property<string>("TrackIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FullTextSearchKey")
                        .IsUnique();

                    b.HasIndex("IsDeleted", "ChangedDate");

                    b.HasIndex("IsDeleted", "FullTextSearchKey");

                    b.HasIndex("AlternativeApprovingOfficerId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("ContentStatus", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("CourseCode", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("CreatedBy", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("DepartmentId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("ECertificateTemplateId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("ExternalCode", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("FirstAdministratorId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("MOEOfficerId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("PDAreaThemeId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("PrimaryApprovingOfficerId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("SecondAdministratorId", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("Status", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("AlternativeApprovingOfficerId", "Status", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("CreatedBy", "Status", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("FirstAdministratorId", "Status", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("PrimaryApprovingOfficerId", "Status", "IsDeleted", "FullTextSearchKey");

                    b.HasIndex("SecondAdministratorId", "Status", "IsDeleted", "FullTextSearchKey");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CourseInternalValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("CourseFacilitatorIds");

                    b.Property<Guid>("Value")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("Type");

                    b.HasIndex("Value");

                    b.HasIndex("CourseId", "Value", "Type");

                    b.HasIndex("Value", "Type", "CourseId");

                    b.ToTable("CourseInternalValue");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CoursePlanningCycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearCycle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndDate");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("StartDate");

                    b.HasIndex("YearCycle", "IsDeleted", "CreatedDate");

                    b.ToTable("CoursePlanningCycle");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CourseUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasDefaultValue("Internal");

                    b.Property<Guid?>("AlternativeApprovingOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("OriginalUserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<Guid>("PrimaryApprovingOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasDefaultValue("New");

                    b.HasKey("Id");

                    b.HasIndex("AlternativeApprovingOfficerId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OriginalUserId");

                    b.HasIndex("PrimaryApprovingOfficerId");

                    b.HasIndex("Status");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.DepartmentUnitTypeDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<Guid>("DepartmentUnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentUnitTypeId", "IsDeleted", "CreatedDate");

                    b.ToTable("DepartmentUnitTypeDepartment");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ECertificateTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhysicalFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("IsDeleted");

                    b.ToTable("ECertificateTemplate");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.LearningPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseLevelIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LearningAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningDimensionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningFrameworkIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningSubAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDAreaThemeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceSchemeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasDefaultValue("Unpublished");

                    b.Property<string>("SubjectAreaIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("Status", "IsDeleted", "CreatedDate");

                    b.ToTable("LearningPath");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.LearningPathCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LearningPathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("LearningPathId", "IsDeleted", "CreatedDate");

                    b.HasIndex("Order", "IsDeleted", "CreatedDate");

                    b.ToTable("LearningPathCourse");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LectureIcon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("SectionId", "IsDeleted", "CreatedDate");

                    b.ToTable("Lecture");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.LectureContent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<Guid?>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("LectureId", "IsDeleted", "CreatedDate");

                    b.ToTable("LectureContent");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.MetadataTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodingScheme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodingScheme");

                    b.HasIndex("GroupCode");

                    b.HasIndex("ParentTagId");

                    b.ToTable("MetadataTags");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ParticipantAssignmentTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RegistrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "AssignedDate");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("IsDeleted", "SubmittedDate");

                    b.HasIndex("AssignmentId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("RegistrationId", "IsDeleted", "CreatedDate");

                    b.HasIndex("UserId", "IsDeleted", "CreatedDate");

                    b.ToTable("ParticipantAssignmentTrack");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("QuizAssignmentFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<float>("ScorePercentage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("QuizAssignmentFormId");

                    b.ToTable("ParticipantAssignmentTrackQuizAnswer");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("ManualScore")
                        .HasColumnType("real");

                    b.Property<Guid?>("ManualScoredBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizAssignmentFormQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ManualScoredBy");

                    b.HasIndex("QuizAnswerId");

                    b.HasIndex("QuizAssignmentFormQuestionId");

                    b.HasIndex("SubmittedDate");

                    b.ToTable("ParticipantAssignmentTrackQuizQuestionAnswer");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.QuizAssignmentForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("RandomizedQuestions")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("QuizAssignmentForm");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.QuizAssignmentFormQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("MaxScore")
                        .HasColumnType("real");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Question_AnswerExplanatoryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_CorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_FeedbackCorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_FeedbackWrongAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_Hint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_Title")
                        .HasColumnType("NTEXT")
                        .HasMaxLength(20000);

                    b.Property<string>("Question_Type")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("QuizAssignmentFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("RandomizedOptions")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("QuizAssignmentFormId");

                    b.HasIndex("IsDeleted", "Priority");

                    b.HasIndex("Question_Type", "IsDeleted");

                    b.ToTable("QuizAssignmentFormQuestion");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdministratedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AdministrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AlternativeApprovingOfficer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ApprovingOfficer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassRunChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClassRunChangeRequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClassRunChangeStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("CourseCriteriaOverrided")
                        .HasColumnType("bit");

                    b.Property<bool?>("CourseCriteriaViolated")
                        .HasColumnType("bit");

                    b.Property<string>("CourseCriteriaViolation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastStatusChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LearningCompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("LearningContentProgress")
                        .HasColumnType("float");

                    b.Property<string>("LearningStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("NotStarted");

                    b.Property<DateTime?>("OfferSentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PostCourseEvaluationFormCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("Application");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("PendingConfirmation");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("WithdrawalRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawalStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunChangeId", "IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunChangeStatus", "IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseCriteriaViolated", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.HasIndex("IsExpired", "IsDeleted", "CreatedDate");

                    b.HasIndex("Status", "IsDeleted", "CreatedDate");

                    b.HasIndex("UserId", "IsDeleted", "CreatedDate");

                    b.HasIndex("WithdrawalStatus", "IsDeleted", "CreatedDate");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditsAward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CourseId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ClassRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RescheduleEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RescheduleStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SessionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "CreatedDate");

                    b.HasIndex("ClassRunId", "IsDeleted", "CreatedDate");

                    b.HasIndex("CreatedBy", "IsDeleted", "CreatedDate");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.UserMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Value")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.HasIndex("Value");

                    b.ToTable("UserMetadata");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.UserSystemRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Value");

                    b.ToTable("UserSystemRole");
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ClassRunInternalValue", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.ClassRun", "ClassRun")
                        .WithMany("ClassRunInternalValues")
                        .HasForeignKey("ClassRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.CourseInternalValue", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.CourseEntity", "Course")
                        .WithMany("CourseInternalValues")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.LectureContent", b =>
                {
                    b.OwnsOne("Microservice.Course.Domain.Entities.LectureQuizConfig", "QuizConfig", b1 =>
                        {
                            b1.Property<Guid>("LectureContentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("ByPassPassingRate")
                                .HasColumnType("bit");

                            b1.HasKey("LectureContentId");

                            b1.ToTable("LectureContent");

                            b1.WithOwner()
                                .HasForeignKey("LectureContentId");
                        });
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizAnswer", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.ParticipantAssignmentTrack", "ParticipantAssignmentTrack")
                        .WithOne("QuizAnswer")
                        .HasForeignKey("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizAnswer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservice.Course.Domain.Entities.QuizAssignmentForm", "QuizAssignmentForm")
                        .WithMany("Answers")
                        .HasForeignKey("QuizAssignmentFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizQuestionAnswer", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.ParticipantAssignmentTrackQuizAnswer", "QuizAnswer")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("QuizAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.UserMetadata", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.CourseUser", "CourseUser")
                        .WithMany("UserMetadatas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservice.Course.Domain.Entities.UserSystemRole", b =>
                {
                    b.HasOne("Microservice.Course.Domain.Entities.CourseUser", "CourseUser")
                        .WithMany("UserSystemRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
